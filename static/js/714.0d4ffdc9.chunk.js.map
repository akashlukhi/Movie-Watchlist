{"version":3,"file":"static/js/714.0d4ffdc9.chunk.js","mappings":"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","sources":["svgs/CheckIcon.jsx","components/WatchListPopup.jsx","components/MovieCard.jsx","components/PopupContainer.jsx","svgs/EditIcon.jsx","components/EditWatchListPopup.jsx","pages/WatchList.jsx","svgs/SaveIcon.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst CheckIcon = React.memo(({ onClick, isMovieWatched = false }) => {\r\n    return (\r\n        <>\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                version=\"1.1\"\r\n                className=\"w-[2rem] h-[2rem]\"\r\n                viewBox=\"0 0 256 256\"\r\n                xmlSpace=\"preserve\"\r\n                onClick={onClick}\r\n            >\r\n                <defs></defs>\r\n                <g transform=\"translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)\">\r\n                    <path\r\n                        d=\"M 89.122 3.486 L 89.122 3.486 c -2.222 -3.736 -7.485 -4.118 -10.224 -0.742 L 33.202 59.083 c -1.118 1.378 -3.245 1.303 -4.262 -0.151 L 17.987 43.291 c -3.726 -5.322 -11.485 -5.665 -15.666 -0.693 l 0 0 c -2.883 3.428 -3.102 8.366 -0.533 12.036 L 24.206 86.65 c 2.729 3.897 8.503 3.89 11.222 -0.014 l 6.435 -9.239 L 88.87 10.265 C 90.28 8.251 90.378 5.598 89.122 3.486 z\"\r\n                        style={{\r\n                            fill: isMovieWatched ? \"lime\" : \"white\",\r\n                        }}\r\n                        transform=\"matrix(1 0 0 1 0 0)\"\r\n                        strokeLinecap=\"round\"\r\n                    />\r\n                </g>\r\n            </svg>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default CheckIcon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PopupContainer from \"./PopupContainer\";\r\n\r\nconst WatchListPopup = React.memo((props) => {\r\n    const {\r\n        openPopUp,\r\n        closePopUp,\r\n        onSave,\r\n        setIsNewWatchList,\r\n        setSelectedWatchlistName,\r\n        setSelectedWatchListDescription,\r\n        watchlists,\r\n    } = props;\r\n\r\n    const [selectedWatchlist, setSelectedWatchlist] = useState(\"\");\r\n    const [newWatchlistName, setNewWatchlistName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [createNew, setCreateNew] = useState(false);\r\n\r\n    const handleStateUpdate = () => {\r\n        setNewWatchlistName(\"\");\r\n        setSelectedWatchlist(\"\");\r\n    };\r\n\r\n    const handleClose = () => {\r\n        handleStateUpdate();\r\n        closePopUp();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        handleStateUpdate();\r\n        onSave();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCreateNew(selectedWatchlist === \"createNew\");\r\n    }, [selectedWatchlist]);\r\n\r\n    useEffect(() => {\r\n        if (createNew) {\r\n            setSelectedWatchlistName(newWatchlistName);\r\n            setSelectedWatchListDescription(description);\r\n            setIsNewWatchList(true);\r\n        } else {\r\n            setSelectedWatchlistName(selectedWatchlist);\r\n        }\r\n    }, [\r\n        createNew,\r\n        selectedWatchlist,\r\n        newWatchlistName,\r\n        description,\r\n        setSelectedWatchlistName,\r\n        setSelectedWatchListDescription,\r\n        setIsNewWatchList,\r\n    ]);\r\n\r\n    return (\r\n        <PopupContainer open={openPopUp} onClose={closePopUp}>\r\n            <h2 className=\"text-2xl font-semibold mb-4\">\r\n                Select the Watchlist\r\n            </h2>\r\n            <div>\r\n                {watchlists?.map((watchlist, index) => (\r\n                    <label\r\n                        key={index}\r\n                        className=\"flex items-center space-x-2 cursor-pointer\"\r\n                    >\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"watchlist\"\r\n                            value={watchlist}\r\n                            checked={selectedWatchlist === watchlist}\r\n                            onChange={() => setSelectedWatchlist(watchlist)}\r\n                            className=\"h-4 w-4 text-red-500\"\r\n                        />\r\n                        <span>{watchlist}</span>\r\n                    </label>\r\n                ))}\r\n                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"watchlist\"\r\n                        value=\"createNew\"\r\n                        checked={selectedWatchlist === \"createNew\"}\r\n                        onChange={() => setSelectedWatchlist(\"createNew\")}\r\n                        className=\"form-radio h-4 w-4 text-red-500\"\r\n                    />\r\n                    <span>Create new watchlist</span>\r\n                </label>\r\n                {createNew && (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter new watchlist name\"\r\n                            className=\"mt-2 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-red-500\"\r\n                            value={newWatchlistName}\r\n                            required\r\n                            onChange={(e) =>\r\n                                setNewWatchlistName(e.target.value)\r\n                            }\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Description (Optional)\"\r\n                            className=\"mt-2 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-red-500\"\r\n                            value={description}\r\n                            required\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                    </>\r\n                )}\r\n            </div>\r\n            <div className=\"mt-4 flex justify-end space-x-4\">\r\n                <button\r\n                    className=\"bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300\"\r\n                    onClick={handleClose}\r\n                >\r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    className=\"bg-red-500 text-white px-4 py-2 rounded-md disabled:hover:bg-red-500 hover:bg-red-600 disabled:opacity-70\"\r\n                    onClick={handleSave}\r\n                    disabled={\r\n                        (!selectedWatchlist && !newWatchlistName) ||\r\n                        (createNew && !newWatchlistName)\r\n                    }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </PopupContainer>\r\n    );\r\n});\r\n\r\nexport default WatchListPopup;\r\n","import React, { useState, useCallback, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    addToWatchlist,\r\n    removeFromWatchlist,\r\n    toggleWatched,\r\n} from \"../store/movieWatchListSlice\";\r\nimport CheckIcon from \"../svgs/CheckIcon\";\r\nimport SaveIcon from \"../svgs/SaveIcon\";\r\nimport WatchListPopup from \"./WatchListPopup\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst MovieCard = React.memo(({ isWatchList, watchListName, movie }) => {\r\n    const { Poster: poster, Title: name, imdbID: movieId, Year: year } = movie;\r\n\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [isNewWatchList, setIsNewWatchList] = useState(false);\r\n    const [selectedWatchlistName, setSelectedWatchlistName] = useState(\"\");\r\n    const [selectedWatchListDescription, setSelectedWatchListDescription] =\r\n        useState(\"\");\r\n\r\n    const { user, isLoggedIn } = useAuth();\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const watchlists = useSelector((state) => state.movies.watchlists[user]);\r\n    const watchlistNames = useMemo(\r\n        () => watchlists?.map((watchlist) => watchlist.name),\r\n        [watchlists]\r\n    );\r\n    const isMovieInWatchlist = useMemo(\r\n        () =>\r\n            watchlists\r\n                ?.flatMap((watchlist) => watchlist.movies)\r\n                .some((movie) => movie?.movieId === movieId),\r\n        [watchlists, movieId]\r\n    );\r\n\r\n    const currentWatchList = useMemo(\r\n        () => watchlists?.find((watchlist) => watchlist.name === watchListName),\r\n        [watchlists, watchListName]\r\n    );\r\n    const isMovieWatched = useMemo(\r\n        () =>\r\n            currentWatchList?.movies.find((movie) => movie.movieId === movieId)\r\n                ?.watched,\r\n        [currentWatchList, movieId]\r\n    );\r\n\r\n    const handleClosePopUp = useCallback(() => {\r\n        setOpenPopup(false);\r\n    }, []);\r\n\r\n    const handleSaveWatchList = useCallback(() => {\r\n        dispatch(\r\n            addToWatchlist({\r\n                userId: user,\r\n                movieId,\r\n                watchlistName: selectedWatchlistName,\r\n                ...(isNewWatchList\r\n                    ? { watchlistDescription: selectedWatchListDescription }\r\n                    : {}),\r\n            })\r\n        );\r\n        setOpenPopup(false);\r\n        toast.success(\"Movie added into the watchlist!\");\r\n    }, [\r\n        dispatch,\r\n        isNewWatchList,\r\n        selectedWatchlistName,\r\n        selectedWatchListDescription,\r\n        user,\r\n        movieId,\r\n    ]);\r\n\r\n    const handleWatchlist = useCallback(() => {\r\n        if (isLoggedIn()) {\r\n            if (isMovieInWatchlist) {\r\n                dispatch(removeFromWatchlist({ userId: user, movieId }));\r\n                toast.success(\"Movie removed from the watchlist!\");\r\n            } else {\r\n                setOpenPopup(true);\r\n            }\r\n        } else {\r\n            const searchParams = new URLSearchParams(location.search);\r\n            navigate(`/login?${searchParams.toString()}`);\r\n            toast.info(\"Login to create your watchlists.\");\r\n        }\r\n    }, [\r\n        dispatch,\r\n        isMovieInWatchlist,\r\n        isLoggedIn,\r\n        location.search,\r\n        navigate,\r\n        user,\r\n        movieId,\r\n    ]);\r\n\r\n    const handleWatched = useCallback(() => {\r\n        dispatch(\r\n            toggleWatched({\r\n                userId: user,\r\n                movieId,\r\n                watchListName,\r\n            })\r\n        );\r\n        toast.success(\"Movie watch option has been updated!\");\r\n    }, [dispatch, user, movieId, watchListName]);\r\n\r\n    return (\r\n        <div className=\"w-full md:w-44 h-[395px] rounded-lg overflow-hidden shadow-xl transition-transform hover:scale-105 mb-8 md:mb-0\">\r\n            <div className=\"relative\">\r\n                <img\r\n                    src={poster}\r\n                    className=\"bg-cover w-full h-[240px]\"\r\n                    alt={`${name} movie`}\r\n                />\r\n                {isWatchList ? (\r\n                    <div className=\"absolute top-2 right-2 cursor-pointer\">\r\n                        <CheckIcon\r\n                            onClick={handleWatched}\r\n                            isMovieWatched={isMovieWatched}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"absolute top-0 left-[calc(-7px)] cursor-pointer\">\r\n                        <SaveIcon\r\n                            onClick={handleWatchlist}\r\n                            isMovieInWatchlist={isMovieInWatchlist}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"px-4 pt-2\">\r\n                <p className=\"text-gray-700 text-base text-right\">93/100</p>\r\n                <div className=\"font-semibold font-sans text-l mt-1\">\r\n                    {name}\r\n                </div>\r\n                <p>({year})</p>\r\n            </div>\r\n            <WatchListPopup\r\n                openPopUp={openPopup}\r\n                closePopUp={handleClosePopUp}\r\n                onSave={handleSaveWatchList}\r\n                watchlists={watchlistNames}\r\n                setIsNewWatchList={setIsNewWatchList}\r\n                setSelectedWatchlistName={setSelectedWatchlistName}\r\n                setSelectedWatchListDescription={\r\n                    setSelectedWatchListDescription\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MovieCard;\r\n","import { useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst PopupContainer = ({ open, onClose, children }) => {\r\n    const popUpRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const handleOutsideClick = (event) => {\r\n            if (popUpRef.current && !popUpRef.current.contains(event.target)) {\r\n                onClose();\r\n            }\r\n        };\r\n\r\n        if (open) {\r\n            document.addEventListener(\"pointerdown\", handleOutsideClick);\r\n        } else {\r\n            document.removeEventListener(\"pointerdown\", handleOutsideClick);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener(\"pointerdown\", handleOutsideClick);\r\n        };\r\n    }, [open, onClose]);\r\n\r\n    if (!open) return null;\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n            <div ref={popUpRef} className=\"bg-white p-8 rounded-lg\">\r\n                {children}\r\n            </div>\r\n        </div>,\r\n        document.getElementById(\"portal-root\")\r\n    );\r\n};\r\n\r\nexport default PopupContainer;\r\n","import React from \"react\";\r\n\r\nconst EditIcon = React.memo(({ onClick }) => {\r\n    return (\r\n        <>\r\n            <svg\r\n                className=\"cursor-pointer feather feather-edit\"\r\n                fill=\"none\"\r\n                height=\"30\"\r\n                stroke=\"currentColor\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                viewBox=\"0 0 24 24\"\r\n                width=\"30\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                onClick={onClick}\r\n            >\r\n                <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\r\n                <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\r\n            </svg>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default EditIcon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PopupContainer from \"./PopupContainer\";\r\n\r\nconst EditWatchListPopup = React.memo(\r\n    ({\r\n        openPopUp,\r\n        closePopUp,\r\n        onSave,\r\n        name,\r\n        description,\r\n        setWatchlistMetaData,\r\n    }) => {\r\n        const [watchlistName, setWatchlistName] = useState(name);\r\n        const [desc, setDesc] = useState(description);\r\n\r\n        const handleClose = () => closePopUp();\r\n\r\n        const handleSave = () => onSave();\r\n\r\n        useEffect(() => {\r\n            setWatchlistMetaData({ name: watchlistName, description: desc });\r\n        }, [watchlistName, desc, setWatchlistMetaData]);\r\n\r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            handleSave();\r\n        };\r\n\r\n        return (\r\n            <PopupContainer open={openPopUp} onClose={closePopUp}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <h2 className=\"text-2xl font-semibold mb-4\">\r\n                        Update the Watchlist Name and Description.\r\n                    </h2>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter new watchlist name\"\r\n                            className=\"mt-2 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-red-500\"\r\n                            value={watchlistName}\r\n                            required\r\n                            onChange={(e) => setWatchlistName(e.target.value)}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Description (Optional)\"\r\n                            className=\"mt-2 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-red-500\"\r\n                            value={desc}\r\n                            onChange={(e) => setDesc(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt-4 flex justify-end space-x-4\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300\"\r\n                            onClick={handleClose}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-red-500 text-white px-4 py-2 rounded-md disabled:hover:bg-red-500 hover:bg-red-600 disabled:opacity-70\"\r\n                            disabled={!watchlistName}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </PopupContainer>\r\n        );\r\n    }\r\n);\r\n\r\nexport default EditWatchListPopup;\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport EditIcon from \"../svgs/EditIcon\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../components/Loading\";\r\nimport EditWatchListPopup from \"../components/EditWatchListPopup\";\r\nimport { updateWatchlistMetadata } from \"../store/movieWatchListSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport MovieCard from \"../components/MovieCard\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst WatchList = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { user, isLoggedIn } = useAuth();\r\n    const { watchlist } = useParams();\r\n    const watchListData = useSelector((state) => state.movies.watchlists[user]);\r\n    const watchListName = decodeURIComponent(watchlist);\r\n    const currentWatchlist = watchListData?.find(\r\n        (watchlists) => watchlists.name === watchListName\r\n    );\r\n    const [movies, setMovies] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [watchlistMetaData, setWatchlistMetaData] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n    });\r\n\r\n    const handleClosePopup = () => setOpenPopup(false);\r\n\r\n    const fetchMovies = useCallback(async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const watchListMovies = currentWatchlist?.movies;\r\n            const promises = watchListMovies?.map(async (movie) => {\r\n                const response = await axios.get(\r\n                    `https://www.omdbapi.com/?apikey=${API_KEY}&i=${movie.movieId}`\r\n                );\r\n                return response.data;\r\n            });\r\n            const results = await Promise.all(promises);\r\n            setMovies(results);\r\n        } catch (error) {\r\n            setIsError(true);\r\n            toast.error(\"Something went wrong!\");\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [currentWatchlist?.movies]);\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn()) {\r\n            fetchMovies();\r\n        }\r\n    }, [fetchMovies, isLoggedIn]);\r\n\r\n    const onSave = () => {\r\n        dispatch(\r\n            updateWatchlistMetadata({\r\n                userId: user,\r\n                watchlistName: watchListName,\r\n                newName: watchlistMetaData.name,\r\n                newDescription: watchlistMetaData.description,\r\n            })\r\n        );\r\n        setOpenPopup(false);\r\n        toast.success(\"Watchlist updated!\");\r\n        navigate(`/watchlist/${watchlistMetaData.name}`);\r\n    };\r\n\r\n    if (!isLoggedIn()) {\r\n        navigate(\"/login\");\r\n        toast.info(\"Login to create your watchlists.\");\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full mx-16 mt-8 flex flex-col flex-grow\">\r\n            <div id=\"watchlist-header\">\r\n                <h2 className=\"text-[2.5rem] font-semibold flex gap-5 items-center\">\r\n                    {watchListName}{\" \"}\r\n                    <EditIcon onClick={() => setOpenPopup(true)} />\r\n                </h2>\r\n                <h4 className=\"font-md text-[1.3rem] font-medium mt-4\">\r\n                    About this watchlist\r\n                </h4>\r\n                <p>{currentWatchlist?.description}</p>\r\n            </div>\r\n            <div id=\"movies\">\r\n                {isLoading ? (\r\n                    <Loading />\r\n                ) : isError ? (\r\n                    <p className=\"flex flex-wrap justify-center items-center h-full font-semibold text-red-500\">\r\n                        Something went wrong! Please try again later.\r\n                    </p>\r\n                ) : (\r\n                    <div\r\n                        id=\"movie-list\"\r\n                        className=\"flex flex-wrap justify-center gap-8 md:justify-start md:gap-10 mt-10 m-auto\"\r\n                    >\r\n                        {movies && movies.length ? (\r\n                            movies.map((movie) => (\r\n                                <MovieCard\r\n                                    movie={movie}\r\n                                    key={movie.imdbID}\r\n                                    isWatchList={true}\r\n                                    watchListName={watchListName}\r\n                                />\r\n                            ))\r\n                        ) : (\r\n                            <p className=\"font-semibold\">No Movies Added!</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <EditWatchListPopup\r\n                name={watchListName}\r\n                description={currentWatchlist?.description}\r\n                openPopUp={openPopup}\r\n                closePopUp={handleClosePopup}\r\n                setWatchlistMetaData={setWatchlistMetaData}\r\n                onSave={onSave}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WatchList;\r\n","import React from \"react\";\r\n\r\nconst SaveIcon = React.memo(({ onClick, isMovieInWatchlist = false }) => {\r\n    return (\r\n        <>\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 83.02 122.88\"\r\n                className=\"w-[3rem] h-[3rem] opacity-80\"\r\n                onClick={onClick}\r\n            >\r\n                <style>{`.st0{fillRule:evenodd;clipRule:evenodd;}`}</style>\r\n                <g>\r\n                    <path\r\n                        style={{\r\n                            fill: isMovieInWatchlist ? \"lime\" : \"black\",\r\n                        }}\r\n                        d=\"M83.02,0L0,0l0.37,122.88l40.99-22.18l40.26,21.88L83.02,0L83.02,0z M47.48,25.82L41.51,7.54 c5.8,0,10.94,1.64,15.46,4.92c4.51,3.27,7.74,7.73,9.73,13.36H47.48L47.48,25.82z M51.14,37.17l15.57-11.31 c0.85,3.05,1.28,5.81,1.28,8.27c0,8.71-3.64,15.82-10.92,21.33L51.14,37.17L51.14,37.17L51.14,37.17z M41.51,44.14l15.56,11.31 c-4.91,3.36-10.1,5.05-15.56,5.05c-5.44,0-10.63-1.68-15.56-5.05L41.51,44.14L41.51,44.14z M31.89,37.17l-5.94,18.28 c-7.28-5.75-10.92-12.88-10.92-21.4c0-2.48,0.44-5.22,1.32-8.2L31.89,37.17L31.89,37.17L31.89,37.17z M35.58,25.82H16.35 c1.94-5.61,5.17-10.05,9.7-13.35c4.53-3.28,9.69-4.93,15.46-4.93L35.58,25.82L35.58,25.82L35.58,25.82z\"\r\n                    />\r\n                </g>\r\n            </svg>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default React.memo(SaveIcon);\r\n"],"names":["React","_ref","onClick","isMovieWatched","_jsx","_Fragment","children","_jsxs","xmlns","version","className","viewBox","xmlSpace","transform","d","style","fill","strokeLinecap","props","openPopUp","closePopUp","onSave","setIsNewWatchList","setSelectedWatchlistName","setSelectedWatchListDescription","watchlists","selectedWatchlist","setSelectedWatchlist","useState","newWatchlistName","setNewWatchlistName","description","setDescription","createNew","setCreateNew","handleStateUpdate","useEffect","PopupContainer","open","onClose","map","watchlist","index","type","name","value","checked","onChange","placeholder","required","e","target","handleClose","handleSave","disabled","isWatchList","watchListName","movie","Poster","poster","Title","imdbID","movieId","Year","year","openPopup","setOpenPopup","isNewWatchList","selectedWatchlistName","selectedWatchListDescription","user","isLoggedIn","useAuth","location","useLocation","navigate","useNavigate","dispatch","useDispatch","useSelector","state","movies","watchlistNames","useMemo","isMovieInWatchlist","flatMap","some","currentWatchList","find","_currentWatchList$mov","watched","handleClosePopUp","useCallback","handleSaveWatchList","addToWatchlist","userId","watchlistName","watchlistDescription","toast","success","handleWatchlist","removeFromWatchlist","searchParams","URLSearchParams","search","concat","toString","info","handleWatched","toggleWatched","src","alt","CheckIcon","SaveIcon","WatchListPopup","popUpRef","useRef","handleOutsideClick","event","current","contains","document","addEventListener","removeEventListener","ReactDOM","ref","getElementById","height","stroke","strokeLinejoin","strokeWidth","width","setWatchlistMetaData","setWatchlistName","desc","setDesc","onSubmit","preventDefault","WatchList","useParams","watchListData","decodeURIComponent","currentWatchlist","setMovies","isLoading","setIsLoading","isError","setIsError","watchlistMetaData","fetchMovies","async","watchListMovies","promises","axios","get","process","data","results","Promise","all","error","console","id","EditIcon","Loading","length","MovieCard","EditWatchListPopup","handleClosePopup","updateWatchlistMetadata","newName","newDescription"],"sourceRoot":""}